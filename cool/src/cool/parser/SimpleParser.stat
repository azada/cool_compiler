// This file was generated by Beaver v0.9.6.1

1:	EOF: REDUCE empty = 
	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	CLASS: SHIFT; goto 111
	STUB: SHIFT; goto 177
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	empty: SHIFT; goto 110
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 2
	classdecl: SHIFT; goto 108
	class_list: SHIFT; goto 3
	bogus: SHIFT; goto 4
	program: ACCEPT
2:	EOF: REDUCE program = expr
3:	EOF: REDUCE program = class_list.cl
4:	EOF: REDUCE program = bogus
5:	EOF: REDUCE primary = lexpr.e
	RPAREN: REDUCE primary = lexpr.e
	MINUS: REDUCE primary = lexpr.e
	RBRACE: REDUCE primary = lexpr.e
	COMMA: REDUCE primary = lexpr.e
	SEMI: REDUCE primary = lexpr.e
	CASE: REDUCE primary = lexpr.e
	ELSE: REDUCE primary = lexpr.e
	LE: REDUCE primary = lexpr.e
	LT: REDUCE primary = lexpr.e
	EQUALS: REDUCE primary = lexpr.e
	PLUS: REDUCE primary = lexpr.e
	TIMES: REDUCE primary = lexpr.e
	DIV: REDUCE primary = lexpr.e
	DOT: REDUCE primary = lexpr.e
	MATCH: REDUCE primary = lexpr.e
	ASSIGN: SHIFT; goto 6
6:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 7
	rel: SHIFT; goto 31
7:	EOF: REDUCE expr = lexpr.le ASSIGN rexpr.re
	RPAREN: REDUCE expr = lexpr.le ASSIGN rexpr.re
	RBRACE: REDUCE expr = lexpr.le ASSIGN rexpr.re
	COMMA: REDUCE expr = lexpr.le ASSIGN rexpr.re
	SEMI: REDUCE expr = lexpr.le ASSIGN rexpr.re
	CASE: REDUCE expr = lexpr.le ASSIGN rexpr.re
	ELSE: REDUCE expr = lexpr.le ASSIGN rexpr.re
8:	LPAREN: SHIFT; goto 9
9:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 10
	rel: SHIFT; goto 31
10:	RPAREN: SHIFT; goto 11
11:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 12
12:	ELSE: SHIFT; goto 13
13:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 14
14:	EOF: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	RPAREN: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	RBRACE: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	COMMA: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	SEMI: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	CASE: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	ELSE: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
15:	EOF: REDUCE expr = rexpr.r
	RPAREN: REDUCE expr = rexpr.r
	RBRACE: REDUCE expr = rexpr.r
	COMMA: REDUCE expr = rexpr.r
	SEMI: REDUCE expr = rexpr.r
	CASE: REDUCE expr = rexpr.r
	ELSE: REDUCE expr = rexpr.r
16:	DOT: SHIFT; goto 17
17:	ID: SHIFT; goto 18
18:	LPAREN: SHIFT; goto 20
	actuals: SHIFT; goto 19
19:	EOF: REDUCE lexpr = SUPER DOT ID actuals.a
	RPAREN: REDUCE lexpr = SUPER DOT ID actuals.a
	MINUS: REDUCE lexpr = SUPER DOT ID actuals.a
	RBRACE: REDUCE lexpr = SUPER DOT ID actuals.a
	COMMA: REDUCE lexpr = SUPER DOT ID actuals.a
	SEMI: REDUCE lexpr = SUPER DOT ID actuals.a
	CASE: REDUCE lexpr = SUPER DOT ID actuals.a
	ELSE: REDUCE lexpr = SUPER DOT ID actuals.a
	LE: REDUCE lexpr = SUPER DOT ID actuals.a
	LT: REDUCE lexpr = SUPER DOT ID actuals.a
	EQUALS: REDUCE lexpr = SUPER DOT ID actuals.a
	PLUS: REDUCE lexpr = SUPER DOT ID actuals.a
	TIMES: REDUCE lexpr = SUPER DOT ID actuals.a
	DIV: REDUCE lexpr = SUPER DOT ID actuals.a
	DOT: REDUCE lexpr = SUPER DOT ID actuals.a
	MATCH: REDUCE lexpr = SUPER DOT ID actuals.a
	ASSIGN: REDUCE lexpr = SUPER DOT ID actuals.a
20:	RPAREN: REDUCE empty = 
	MINUS: SHIFT; goto 89
	COMMA: REDUCE empty = 
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	empty: SHIFT; goto 107
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 106
	exp_list: SHIFT; goto 21
21:	RPAREN: SHIFT; goto 22
	COMMA: SHIFT; goto 23
22:	EOF: REDUCE actuals = LPAREN exp_list.el RPAREN
	RPAREN: REDUCE actuals = LPAREN exp_list.el RPAREN
	MINUS: REDUCE actuals = LPAREN exp_list.el RPAREN
	RBRACE: REDUCE actuals = LPAREN exp_list.el RPAREN
	COMMA: REDUCE actuals = LPAREN exp_list.el RPAREN
	LBRACE: REDUCE actuals = LPAREN exp_list.el RPAREN
	SEMI: REDUCE actuals = LPAREN exp_list.el RPAREN
	CASE: REDUCE actuals = LPAREN exp_list.el RPAREN
	ELSE: REDUCE actuals = LPAREN exp_list.el RPAREN
	LE: REDUCE actuals = LPAREN exp_list.el RPAREN
	LT: REDUCE actuals = LPAREN exp_list.el RPAREN
	EQUALS: REDUCE actuals = LPAREN exp_list.el RPAREN
	PLUS: REDUCE actuals = LPAREN exp_list.el RPAREN
	TIMES: REDUCE actuals = LPAREN exp_list.el RPAREN
	DIV: REDUCE actuals = LPAREN exp_list.el RPAREN
	DOT: REDUCE actuals = LPAREN exp_list.el RPAREN
	MATCH: REDUCE actuals = LPAREN exp_list.el RPAREN
	ASSIGN: REDUCE actuals = LPAREN exp_list.el RPAREN
23:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 24
24:	RPAREN: REDUCE exp_list = exp_list.el COMMA expr.e
	COMMA: REDUCE exp_list = exp_list.el COMMA expr.e
25:	EOF: REDUCE lexpr = ident.id
	RPAREN: REDUCE lexpr = ident.id
	MINUS: REDUCE lexpr = ident.id
	RBRACE: REDUCE lexpr = ident.id
	COMMA: REDUCE lexpr = ident.id
	SEMI: REDUCE lexpr = ident.id
	CASE: REDUCE lexpr = ident.id
	ELSE: REDUCE lexpr = ident.id
	LE: REDUCE lexpr = ident.id
	LT: REDUCE lexpr = ident.id
	EQUALS: REDUCE lexpr = ident.id
	PLUS: REDUCE lexpr = ident.id
	TIMES: REDUCE lexpr = ident.id
	DIV: REDUCE lexpr = ident.id
	DOT: REDUCE lexpr = ident.id
	MATCH: REDUCE lexpr = ident.id
	ASSIGN: REDUCE lexpr = ident.id
26:	LPAREN: SHIFT; goto 27
27:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 28
	rel: SHIFT; goto 31
28:	RPAREN: SHIFT; goto 29
29:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 30
30:	EOF: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	RPAREN: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	RBRACE: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	COMMA: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	SEMI: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	CASE: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	ELSE: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
31:	EOF: REDUCE rexpr = rel.r
	RPAREN: REDUCE rexpr = rel.r
	RBRACE: REDUCE rexpr = rel.r
	COMMA: REDUCE rexpr = rel.r
	SEMI: REDUCE rexpr = rel.r
	CASE: REDUCE rexpr = rel.r
	ELSE: REDUCE rexpr = rel.r
	LE: SHIFT; goto 32
	LT: SHIFT; goto 104
32:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 102
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 33
33:	EOF: REDUCE rel = rel.r LE equiv.e
	RPAREN: REDUCE rel = rel.r LE equiv.e
	RBRACE: REDUCE rel = rel.r LE equiv.e
	COMMA: REDUCE rel = rel.r LE equiv.e
	SEMI: REDUCE rel = rel.r LE equiv.e
	CASE: REDUCE rel = rel.r LE equiv.e
	ELSE: REDUCE rel = rel.r LE equiv.e
	LE: REDUCE rel = rel.r LE equiv.e
	LT: REDUCE rel = rel.r LE equiv.e
	EQUALS: SHIFT; goto 34
34:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 102
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 35
35:	EOF: REDUCE equiv = equiv.e EQUALS sum.s
	RPAREN: REDUCE equiv = equiv.e EQUALS sum.s
	MINUS: SHIFT; goto 98
	RBRACE: REDUCE equiv = equiv.e EQUALS sum.s
	COMMA: REDUCE equiv = equiv.e EQUALS sum.s
	SEMI: REDUCE equiv = equiv.e EQUALS sum.s
	CASE: REDUCE equiv = equiv.e EQUALS sum.s
	ELSE: REDUCE equiv = equiv.e EQUALS sum.s
	LE: REDUCE equiv = equiv.e EQUALS sum.s
	LT: REDUCE equiv = equiv.e EQUALS sum.s
	EQUALS: REDUCE equiv = equiv.e EQUALS sum.s
	PLUS: SHIFT; goto 36
36:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 102
	ident: SHIFT; goto 25
	product: SHIFT; goto 37
37:	EOF: REDUCE sum = sum.s PLUS product.p
	RPAREN: REDUCE sum = sum.s PLUS product.p
	MINUS: REDUCE sum = sum.s PLUS product.p
	RBRACE: REDUCE sum = sum.s PLUS product.p
	COMMA: REDUCE sum = sum.s PLUS product.p
	SEMI: REDUCE sum = sum.s PLUS product.p
	CASE: REDUCE sum = sum.s PLUS product.p
	ELSE: REDUCE sum = sum.s PLUS product.p
	LE: REDUCE sum = sum.s PLUS product.p
	LT: REDUCE sum = sum.s PLUS product.p
	EQUALS: REDUCE sum = sum.s PLUS product.p
	PLUS: REDUCE sum = sum.s PLUS product.p
	TIMES: SHIFT; goto 38
	DIV: SHIFT; goto 100
38:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 39
	ident: SHIFT; goto 25
39:	EOF: REDUCE product = product.p TIMES primary.i
	RPAREN: REDUCE product = product.p TIMES primary.i
	MINUS: REDUCE product = product.p TIMES primary.i
	RBRACE: REDUCE product = product.p TIMES primary.i
	COMMA: REDUCE product = product.p TIMES primary.i
	SEMI: REDUCE product = product.p TIMES primary.i
	CASE: REDUCE product = product.p TIMES primary.i
	ELSE: REDUCE product = product.p TIMES primary.i
	LE: REDUCE product = product.p TIMES primary.i
	LT: REDUCE product = product.p TIMES primary.i
	EQUALS: REDUCE product = product.p TIMES primary.i
	PLUS: REDUCE product = product.p TIMES primary.i
	TIMES: REDUCE product = product.p TIMES primary.i
	DIV: REDUCE product = product.p TIMES primary.i
	DOT: SHIFT; goto 40
40:	ID: SHIFT; goto 41
41:	LPAREN: SHIFT; goto 20
	actuals: SHIFT; goto 42
42:	EOF: REDUCE primary = primary DOT ID actuals.a
	RPAREN: REDUCE primary = primary DOT ID actuals.a
	MINUS: REDUCE primary = primary DOT ID actuals.a
	RBRACE: REDUCE primary = primary DOT ID actuals.a
	COMMA: REDUCE primary = primary DOT ID actuals.a
	SEMI: REDUCE primary = primary DOT ID actuals.a
	CASE: REDUCE primary = primary DOT ID actuals.a
	ELSE: REDUCE primary = primary DOT ID actuals.a
	LE: REDUCE primary = primary DOT ID actuals.a
	LT: REDUCE primary = primary DOT ID actuals.a
	EQUALS: REDUCE primary = primary DOT ID actuals.a
	PLUS: REDUCE primary = primary DOT ID actuals.a
	TIMES: REDUCE primary = primary DOT ID actuals.a
	DIV: REDUCE primary = primary DOT ID actuals.a
	DOT: REDUCE primary = primary DOT ID actuals.a
	MATCH: REDUCE primary = primary DOT ID actuals.a
43:	MINUS: REDUCE empty = 
	LBRACE: REDUCE empty = 
	LPAREN: REDUCE empty = 
	ID: REDUCE empty = 
	NULL: REDUCE empty = 
	NEW: REDUCE empty = 
	THIS: REDUCE empty = 
	SUPER: REDUCE empty = 
	NOT: REDUCE empty = 
	INTEGER: REDUCE empty = 
	STRING: REDUCE empty = 
	BOOLEAN: REDUCE empty = 
	IF: REDUCE empty = 
	WHILE: REDUCE empty = 
	VAR: REDUCE empty = 
	empty: SHIFT; goto 71
	st_list: SHIFT; goto 46
	block: SHIFT; goto 44
44:	RBRACE: SHIFT; goto 45
45:	EOF: REDUCE primary = LBRACE block.b RBRACE
	RPAREN: REDUCE primary = LBRACE block.b RBRACE
	MINUS: REDUCE primary = LBRACE block.b RBRACE
	RBRACE: REDUCE primary = LBRACE block.b RBRACE
	COMMA: REDUCE primary = LBRACE block.b RBRACE
	SEMI: REDUCE primary = LBRACE block.b RBRACE
	CASE: REDUCE primary = LBRACE block.b RBRACE
	ELSE: REDUCE primary = LBRACE block.b RBRACE
	LE: REDUCE primary = LBRACE block.b RBRACE
	LT: REDUCE primary = LBRACE block.b RBRACE
	EQUALS: REDUCE primary = LBRACE block.b RBRACE
	PLUS: REDUCE primary = LBRACE block.b RBRACE
	TIMES: REDUCE primary = LBRACE block.b RBRACE
	DIV: REDUCE primary = LBRACE block.b RBRACE
	DOT: REDUCE primary = LBRACE block.b RBRACE
	MATCH: REDUCE primary = LBRACE block.b RBRACE
46:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	VAR: SHIFT; goto 51
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 47
	new_var: SHIFT; goto 49
47:	RBRACE: REDUCE block = st_list.el expr.e
	SEMI: SHIFT; goto 48
	CASE: REDUCE block = st_list.el expr.e
48:	MINUS: REDUCE st_list = st_list.el expr.e SEMI
	LBRACE: REDUCE st_list = st_list.el expr.e SEMI
	LPAREN: REDUCE st_list = st_list.el expr.e SEMI
	ID: REDUCE st_list = st_list.el expr.e SEMI
	NULL: REDUCE st_list = st_list.el expr.e SEMI
	NEW: REDUCE st_list = st_list.el expr.e SEMI
	THIS: REDUCE st_list = st_list.el expr.e SEMI
	SUPER: REDUCE st_list = st_list.el expr.e SEMI
	NOT: REDUCE st_list = st_list.el expr.e SEMI
	INTEGER: REDUCE st_list = st_list.el expr.e SEMI
	STRING: REDUCE st_list = st_list.el expr.e SEMI
	BOOLEAN: REDUCE st_list = st_list.el expr.e SEMI
	IF: REDUCE st_list = st_list.el expr.e SEMI
	WHILE: REDUCE st_list = st_list.el expr.e SEMI
	VAR: REDUCE st_list = st_list.el expr.e SEMI
49:	SEMI: SHIFT; goto 50
50:	MINUS: REDUCE st_list = st_list.el new_var.ve SEMI
	LBRACE: REDUCE st_list = st_list.el new_var.ve SEMI
	LPAREN: REDUCE st_list = st_list.el new_var.ve SEMI
	ID: REDUCE st_list = st_list.el new_var.ve SEMI
	NULL: REDUCE st_list = st_list.el new_var.ve SEMI
	NEW: REDUCE st_list = st_list.el new_var.ve SEMI
	THIS: REDUCE st_list = st_list.el new_var.ve SEMI
	SUPER: REDUCE st_list = st_list.el new_var.ve SEMI
	NOT: REDUCE st_list = st_list.el new_var.ve SEMI
	INTEGER: REDUCE st_list = st_list.el new_var.ve SEMI
	STRING: REDUCE st_list = st_list.el new_var.ve SEMI
	BOOLEAN: REDUCE st_list = st_list.el new_var.ve SEMI
	IF: REDUCE st_list = st_list.el new_var.ve SEMI
	WHILE: REDUCE st_list = st_list.el new_var.ve SEMI
	VAR: REDUCE st_list = st_list.el new_var.ve SEMI
51:	ID: SHIFT; goto 52
52:	COLON: SHIFT; goto 53
53:	TYPE: SHIFT; goto 54
54:	ASSIGN: SHIFT; goto 55
55:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 56
56:	SEMI: REDUCE new_var = VAR ID.id COLON TYPE.t ASSIGN expr.e
57:	EOF: REDUCE product = primary.p
	RPAREN: REDUCE product = primary.p
	MINUS: REDUCE product = primary.p
	RBRACE: REDUCE product = primary.p
	COMMA: REDUCE product = primary.p
	SEMI: REDUCE product = primary.p
	CASE: REDUCE product = primary.p
	ELSE: REDUCE product = primary.p
	LE: REDUCE product = primary.p
	LT: REDUCE product = primary.p
	EQUALS: REDUCE product = primary.p
	PLUS: REDUCE product = primary.p
	TIMES: REDUCE product = primary.p
	DIV: REDUCE product = primary.p
	DOT: SHIFT; goto 40
	MATCH: SHIFT; goto 58
58:	LBRACE: SHIFT; goto 60
	cases: SHIFT; goto 59
59:	EOF: REDUCE rexpr = primary.p MATCH cases.c
	RPAREN: REDUCE rexpr = primary.p MATCH cases.c
	RBRACE: REDUCE rexpr = primary.p MATCH cases.c
	COMMA: REDUCE rexpr = primary.p MATCH cases.c
	SEMI: REDUCE rexpr = primary.p MATCH cases.c
	CASE: REDUCE rexpr = primary.p MATCH cases.c
	ELSE: REDUCE rexpr = primary.p MATCH cases.c
60:	RBRACE: REDUCE empty = 
	CASE: SHIFT; goto 63
	empty: SHIFT; goto 70
	case_block: SHIFT; goto 61
61:	RBRACE: SHIFT; goto 62
62:	EOF: REDUCE cases = LBRACE case_block.cb RBRACE
	RPAREN: REDUCE cases = LBRACE case_block.cb RBRACE
	RBRACE: REDUCE cases = LBRACE case_block.cb RBRACE
	COMMA: REDUCE cases = LBRACE case_block.cb RBRACE
	SEMI: REDUCE cases = LBRACE case_block.cb RBRACE
	CASE: REDUCE cases = LBRACE case_block.cb RBRACE
	ELSE: REDUCE cases = LBRACE case_block.cb RBRACE
63:	ID: SHIFT; goto 64
	NULL: SHIFT; goto 72
64:	COLON: SHIFT; goto 65
65:	TYPE: SHIFT; goto 66
66:	ARROW: SHIFT; goto 67
67:	MINUS: REDUCE empty = 
	LBRACE: REDUCE empty = 
	LPAREN: REDUCE empty = 
	ID: REDUCE empty = 
	NULL: REDUCE empty = 
	NEW: REDUCE empty = 
	THIS: REDUCE empty = 
	SUPER: REDUCE empty = 
	NOT: REDUCE empty = 
	INTEGER: REDUCE empty = 
	STRING: REDUCE empty = 
	BOOLEAN: REDUCE empty = 
	IF: REDUCE empty = 
	WHILE: REDUCE empty = 
	VAR: REDUCE empty = 
	empty: SHIFT; goto 71
	st_list: SHIFT; goto 46
	block: SHIFT; goto 68
68:	RBRACE: REDUCE empty = 
	CASE: SHIFT; goto 63
	empty: SHIFT; goto 70
	case_block: SHIFT; goto 69
69:	RBRACE: REDUCE case_block = CASE ID.id COLON TYPE.t ARROW block.b case_block.cb
70:	RBRACE: REDUCE case_block = empty
71:	MINUS: REDUCE st_list = empty
	LBRACE: REDUCE st_list = empty
	LPAREN: REDUCE st_list = empty
	ID: REDUCE st_list = empty
	NULL: REDUCE st_list = empty
	NEW: REDUCE st_list = empty
	THIS: REDUCE st_list = empty
	SUPER: REDUCE st_list = empty
	NOT: REDUCE st_list = empty
	INTEGER: REDUCE st_list = empty
	STRING: REDUCE st_list = empty
	BOOLEAN: REDUCE st_list = empty
	IF: REDUCE st_list = empty
	WHILE: REDUCE st_list = empty
	VAR: REDUCE st_list = empty
72:	ARROW: SHIFT; goto 73
73:	MINUS: REDUCE empty = 
	LBRACE: REDUCE empty = 
	LPAREN: REDUCE empty = 
	ID: REDUCE empty = 
	NULL: REDUCE empty = 
	NEW: REDUCE empty = 
	THIS: REDUCE empty = 
	SUPER: REDUCE empty = 
	NOT: REDUCE empty = 
	INTEGER: REDUCE empty = 
	STRING: REDUCE empty = 
	BOOLEAN: REDUCE empty = 
	IF: REDUCE empty = 
	WHILE: REDUCE empty = 
	VAR: REDUCE empty = 
	empty: SHIFT; goto 71
	st_list: SHIFT; goto 46
	block: SHIFT; goto 74
74:	RBRACE: REDUCE empty = 
	CASE: SHIFT; goto 63
	empty: SHIFT; goto 70
	case_block: SHIFT; goto 75
75:	RBRACE: REDUCE case_block = CASE NULL ARROW block.b case_block.cb
76:	EOF: REDUCE opt$actuals = 
	RPAREN: REDUCE opt$actuals = 
	MINUS: REDUCE opt$actuals = 
	RBRACE: REDUCE opt$actuals = 
	COMMA: REDUCE opt$actuals = 
	SEMI: REDUCE opt$actuals = 
	CASE: REDUCE opt$actuals = 
	ELSE: REDUCE opt$actuals = 
	LPAREN: SHIFT; goto 20
	LE: REDUCE opt$actuals = 
	LT: REDUCE opt$actuals = 
	EQUALS: REDUCE opt$actuals = 
	PLUS: REDUCE opt$actuals = 
	TIMES: REDUCE opt$actuals = 
	DIV: REDUCE opt$actuals = 
	DOT: REDUCE opt$actuals = 
	MATCH: REDUCE opt$actuals = 
	ASSIGN: REDUCE opt$actuals = 
	actuals: SHIFT; goto 78
	opt$actuals: SHIFT; goto 77
77:	EOF: REDUCE ident = ID.id opt$actuals
	RPAREN: REDUCE ident = ID.id opt$actuals
	MINUS: REDUCE ident = ID.id opt$actuals
	RBRACE: REDUCE ident = ID.id opt$actuals
	COMMA: REDUCE ident = ID.id opt$actuals
	SEMI: REDUCE ident = ID.id opt$actuals
	CASE: REDUCE ident = ID.id opt$actuals
	ELSE: REDUCE ident = ID.id opt$actuals
	LE: REDUCE ident = ID.id opt$actuals
	LT: REDUCE ident = ID.id opt$actuals
	EQUALS: REDUCE ident = ID.id opt$actuals
	PLUS: REDUCE ident = ID.id opt$actuals
	TIMES: REDUCE ident = ID.id opt$actuals
	DIV: REDUCE ident = ID.id opt$actuals
	DOT: REDUCE ident = ID.id opt$actuals
	MATCH: REDUCE ident = ID.id opt$actuals
	ASSIGN: REDUCE ident = ID.id opt$actuals
78:	EOF: REDUCE opt$actuals = actuals
	RPAREN: REDUCE opt$actuals = actuals
	MINUS: REDUCE opt$actuals = actuals
	RBRACE: REDUCE opt$actuals = actuals
	COMMA: REDUCE opt$actuals = actuals
	SEMI: REDUCE opt$actuals = actuals
	CASE: REDUCE opt$actuals = actuals
	ELSE: REDUCE opt$actuals = actuals
	LE: REDUCE opt$actuals = actuals
	LT: REDUCE opt$actuals = actuals
	EQUALS: REDUCE opt$actuals = actuals
	PLUS: REDUCE opt$actuals = actuals
	TIMES: REDUCE opt$actuals = actuals
	DIV: REDUCE opt$actuals = actuals
	DOT: REDUCE opt$actuals = actuals
	MATCH: REDUCE opt$actuals = actuals
	ASSIGN: REDUCE opt$actuals = actuals
79:	EOF: REDUCE ident = THIS
	RPAREN: REDUCE ident = THIS
	MINUS: REDUCE ident = THIS
	RBRACE: REDUCE ident = THIS
	COMMA: REDUCE ident = THIS
	SEMI: REDUCE ident = THIS
	CASE: REDUCE ident = THIS
	ELSE: REDUCE ident = THIS
	LE: REDUCE ident = THIS
	LT: REDUCE ident = THIS
	EQUALS: REDUCE ident = THIS
	PLUS: REDUCE ident = THIS
	TIMES: REDUCE ident = THIS
	DIV: REDUCE ident = THIS
	DOT: REDUCE ident = THIS
	MATCH: REDUCE ident = THIS
	ASSIGN: REDUCE ident = THIS
80:	EOF: REDUCE rel = equiv.e
	RPAREN: REDUCE rel = equiv.e
	RBRACE: REDUCE rel = equiv.e
	COMMA: REDUCE rel = equiv.e
	SEMI: REDUCE rel = equiv.e
	CASE: REDUCE rel = equiv.e
	ELSE: REDUCE rel = equiv.e
	LE: REDUCE rel = equiv.e
	LT: REDUCE rel = equiv.e
	EQUALS: SHIFT; goto 34
81:	RPAREN: SHIFT; goto 84
	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 82
82:	RPAREN: SHIFT; goto 83
83:	EOF: REDUCE primary = LPAREN expr.e RPAREN
	RPAREN: REDUCE primary = LPAREN expr.e RPAREN
	MINUS: REDUCE primary = LPAREN expr.e RPAREN
	RBRACE: REDUCE primary = LPAREN expr.e RPAREN
	COMMA: REDUCE primary = LPAREN expr.e RPAREN
	SEMI: REDUCE primary = LPAREN expr.e RPAREN
	CASE: REDUCE primary = LPAREN expr.e RPAREN
	ELSE: REDUCE primary = LPAREN expr.e RPAREN
	LE: REDUCE primary = LPAREN expr.e RPAREN
	LT: REDUCE primary = LPAREN expr.e RPAREN
	EQUALS: REDUCE primary = LPAREN expr.e RPAREN
	PLUS: REDUCE primary = LPAREN expr.e RPAREN
	TIMES: REDUCE primary = LPAREN expr.e RPAREN
	DIV: REDUCE primary = LPAREN expr.e RPAREN
	DOT: REDUCE primary = LPAREN expr.e RPAREN
	MATCH: REDUCE primary = LPAREN expr.e RPAREN
84:	EOF: REDUCE primary = LPAREN RPAREN
	RPAREN: REDUCE primary = LPAREN RPAREN
	MINUS: REDUCE primary = LPAREN RPAREN
	RBRACE: REDUCE primary = LPAREN RPAREN
	COMMA: REDUCE primary = LPAREN RPAREN
	SEMI: REDUCE primary = LPAREN RPAREN
	CASE: REDUCE primary = LPAREN RPAREN
	ELSE: REDUCE primary = LPAREN RPAREN
	LE: REDUCE primary = LPAREN RPAREN
	LT: REDUCE primary = LPAREN RPAREN
	EQUALS: REDUCE primary = LPAREN RPAREN
	PLUS: REDUCE primary = LPAREN RPAREN
	TIMES: REDUCE primary = LPAREN RPAREN
	DIV: REDUCE primary = LPAREN RPAREN
	DOT: REDUCE primary = LPAREN RPAREN
	MATCH: REDUCE primary = LPAREN RPAREN
85:	EOF: REDUCE primary = NULL
	RPAREN: REDUCE primary = NULL
	MINUS: REDUCE primary = NULL
	RBRACE: REDUCE primary = NULL
	COMMA: REDUCE primary = NULL
	SEMI: REDUCE primary = NULL
	CASE: REDUCE primary = NULL
	ELSE: REDUCE primary = NULL
	LE: REDUCE primary = NULL
	LT: REDUCE primary = NULL
	EQUALS: REDUCE primary = NULL
	PLUS: REDUCE primary = NULL
	TIMES: REDUCE primary = NULL
	DIV: REDUCE primary = NULL
	DOT: REDUCE primary = NULL
	MATCH: REDUCE primary = NULL
86:	EOF: REDUCE primary = INTEGER.i
	RPAREN: REDUCE primary = INTEGER.i
	MINUS: REDUCE primary = INTEGER.i
	RBRACE: REDUCE primary = INTEGER.i
	COMMA: REDUCE primary = INTEGER.i
	SEMI: REDUCE primary = INTEGER.i
	CASE: REDUCE primary = INTEGER.i
	ELSE: REDUCE primary = INTEGER.i
	LE: REDUCE primary = INTEGER.i
	LT: REDUCE primary = INTEGER.i
	EQUALS: REDUCE primary = INTEGER.i
	PLUS: REDUCE primary = INTEGER.i
	TIMES: REDUCE primary = INTEGER.i
	DIV: REDUCE primary = INTEGER.i
	DOT: REDUCE primary = INTEGER.i
	MATCH: REDUCE primary = INTEGER.i
87:	EOF: REDUCE primary = STRING.s
	RPAREN: REDUCE primary = STRING.s
	MINUS: REDUCE primary = STRING.s
	RBRACE: REDUCE primary = STRING.s
	COMMA: REDUCE primary = STRING.s
	SEMI: REDUCE primary = STRING.s
	CASE: REDUCE primary = STRING.s
	ELSE: REDUCE primary = STRING.s
	LE: REDUCE primary = STRING.s
	LT: REDUCE primary = STRING.s
	EQUALS: REDUCE primary = STRING.s
	PLUS: REDUCE primary = STRING.s
	TIMES: REDUCE primary = STRING.s
	DIV: REDUCE primary = STRING.s
	DOT: REDUCE primary = STRING.s
	MATCH: REDUCE primary = STRING.s
88:	EOF: REDUCE primary = BOOLEAN.b
	RPAREN: REDUCE primary = BOOLEAN.b
	MINUS: REDUCE primary = BOOLEAN.b
	RBRACE: REDUCE primary = BOOLEAN.b
	COMMA: REDUCE primary = BOOLEAN.b
	SEMI: REDUCE primary = BOOLEAN.b
	CASE: REDUCE primary = BOOLEAN.b
	ELSE: REDUCE primary = BOOLEAN.b
	LE: REDUCE primary = BOOLEAN.b
	LT: REDUCE primary = BOOLEAN.b
	EQUALS: REDUCE primary = BOOLEAN.b
	PLUS: REDUCE primary = BOOLEAN.b
	TIMES: REDUCE primary = BOOLEAN.b
	DIV: REDUCE primary = BOOLEAN.b
	DOT: REDUCE primary = BOOLEAN.b
	MATCH: REDUCE primary = BOOLEAN.b
89:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 90
	ident: SHIFT; goto 25
90:	EOF: REDUCE primary = MINUS primary.p
	RPAREN: REDUCE primary = MINUS primary.p
	MINUS: REDUCE primary = MINUS primary.p
	RBRACE: REDUCE primary = MINUS primary.p
	COMMA: REDUCE primary = MINUS primary.p
	SEMI: REDUCE primary = MINUS primary.p
	CASE: REDUCE primary = MINUS primary.p
	ELSE: REDUCE primary = MINUS primary.p
	LE: REDUCE primary = MINUS primary.p
	LT: REDUCE primary = MINUS primary.p
	EQUALS: REDUCE primary = MINUS primary.p
	PLUS: REDUCE primary = MINUS primary.p
	TIMES: REDUCE primary = MINUS primary.p
	DIV: REDUCE primary = MINUS primary.p
	DOT: SHIFT; goto 40
	MATCH: REDUCE primary = MINUS primary.p
91:	EOF: REDUCE primary = lexpr.e
	RPAREN: REDUCE primary = lexpr.e
	MINUS: REDUCE primary = lexpr.e
	RBRACE: REDUCE primary = lexpr.e
	COMMA: REDUCE primary = lexpr.e
	SEMI: REDUCE primary = lexpr.e
	CASE: REDUCE primary = lexpr.e
	ELSE: REDUCE primary = lexpr.e
	LE: REDUCE primary = lexpr.e
	LT: REDUCE primary = lexpr.e
	EQUALS: REDUCE primary = lexpr.e
	PLUS: REDUCE primary = lexpr.e
	TIMES: REDUCE primary = lexpr.e
	DIV: REDUCE primary = lexpr.e
	DOT: REDUCE primary = lexpr.e
	MATCH: REDUCE primary = lexpr.e
92:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 93
	ident: SHIFT; goto 25
93:	EOF: REDUCE primary = NOT primary.p
	RPAREN: REDUCE primary = NOT primary.p
	MINUS: REDUCE primary = NOT primary.p
	RBRACE: REDUCE primary = NOT primary.p
	COMMA: REDUCE primary = NOT primary.p
	SEMI: REDUCE primary = NOT primary.p
	CASE: REDUCE primary = NOT primary.p
	ELSE: REDUCE primary = NOT primary.p
	LE: REDUCE primary = NOT primary.p
	LT: REDUCE primary = NOT primary.p
	EQUALS: REDUCE primary = NOT primary.p
	PLUS: REDUCE primary = NOT primary.p
	TIMES: REDUCE primary = NOT primary.p
	DIV: REDUCE primary = NOT primary.p
	DOT: SHIFT; goto 40
	MATCH: REDUCE primary = NOT primary.p
94:	TYPE: SHIFT; goto 95
95:	LPAREN: SHIFT; goto 20
	actuals: SHIFT; goto 96
96:	EOF: REDUCE primary = NEW TYPE.t actuals.s
	RPAREN: REDUCE primary = NEW TYPE.t actuals.s
	MINUS: REDUCE primary = NEW TYPE.t actuals.s
	RBRACE: REDUCE primary = NEW TYPE.t actuals.s
	COMMA: REDUCE primary = NEW TYPE.t actuals.s
	SEMI: REDUCE primary = NEW TYPE.t actuals.s
	CASE: REDUCE primary = NEW TYPE.t actuals.s
	ELSE: REDUCE primary = NEW TYPE.t actuals.s
	LE: REDUCE primary = NEW TYPE.t actuals.s
	LT: REDUCE primary = NEW TYPE.t actuals.s
	EQUALS: REDUCE primary = NEW TYPE.t actuals.s
	PLUS: REDUCE primary = NEW TYPE.t actuals.s
	TIMES: REDUCE primary = NEW TYPE.t actuals.s
	DIV: REDUCE primary = NEW TYPE.t actuals.s
	DOT: REDUCE primary = NEW TYPE.t actuals.s
	MATCH: REDUCE primary = NEW TYPE.t actuals.s
97:	EOF: REDUCE equiv = sum.s
	RPAREN: REDUCE equiv = sum.s
	MINUS: SHIFT; goto 98
	RBRACE: REDUCE equiv = sum.s
	COMMA: REDUCE equiv = sum.s
	SEMI: REDUCE equiv = sum.s
	CASE: REDUCE equiv = sum.s
	ELSE: REDUCE equiv = sum.s
	LE: REDUCE equiv = sum.s
	LT: REDUCE equiv = sum.s
	EQUALS: REDUCE equiv = sum.s
	PLUS: SHIFT; goto 36
98:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 102
	ident: SHIFT; goto 25
	product: SHIFT; goto 99
99:	EOF: REDUCE sum = sum.s MINUS product.p
	RPAREN: REDUCE sum = sum.s MINUS product.p
	MINUS: REDUCE sum = sum.s MINUS product.p
	RBRACE: REDUCE sum = sum.s MINUS product.p
	COMMA: REDUCE sum = sum.s MINUS product.p
	SEMI: REDUCE sum = sum.s MINUS product.p
	CASE: REDUCE sum = sum.s MINUS product.p
	ELSE: REDUCE sum = sum.s MINUS product.p
	LE: REDUCE sum = sum.s MINUS product.p
	LT: REDUCE sum = sum.s MINUS product.p
	EQUALS: REDUCE sum = sum.s MINUS product.p
	PLUS: REDUCE sum = sum.s MINUS product.p
	TIMES: SHIFT; goto 38
	DIV: SHIFT; goto 100
100:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 101
	ident: SHIFT; goto 25
101:	EOF: REDUCE product = product.p DIV primary.i
	RPAREN: REDUCE product = product.p DIV primary.i
	MINUS: REDUCE product = product.p DIV primary.i
	RBRACE: REDUCE product = product.p DIV primary.i
	COMMA: REDUCE product = product.p DIV primary.i
	SEMI: REDUCE product = product.p DIV primary.i
	CASE: REDUCE product = product.p DIV primary.i
	ELSE: REDUCE product = product.p DIV primary.i
	LE: REDUCE product = product.p DIV primary.i
	LT: REDUCE product = product.p DIV primary.i
	EQUALS: REDUCE product = product.p DIV primary.i
	PLUS: REDUCE product = product.p DIV primary.i
	TIMES: REDUCE product = product.p DIV primary.i
	DIV: REDUCE product = product.p DIV primary.i
	DOT: SHIFT; goto 40
102:	EOF: REDUCE product = primary.p
	RPAREN: REDUCE product = primary.p
	MINUS: REDUCE product = primary.p
	RBRACE: REDUCE product = primary.p
	COMMA: REDUCE product = primary.p
	SEMI: REDUCE product = primary.p
	CASE: REDUCE product = primary.p
	ELSE: REDUCE product = primary.p
	LE: REDUCE product = primary.p
	LT: REDUCE product = primary.p
	EQUALS: REDUCE product = primary.p
	PLUS: REDUCE product = primary.p
	TIMES: REDUCE product = primary.p
	DIV: REDUCE product = primary.p
	DOT: SHIFT; goto 40
103:	EOF: REDUCE sum = product.p
	RPAREN: REDUCE sum = product.p
	MINUS: REDUCE sum = product.p
	RBRACE: REDUCE sum = product.p
	COMMA: REDUCE sum = product.p
	SEMI: REDUCE sum = product.p
	CASE: REDUCE sum = product.p
	ELSE: REDUCE sum = product.p
	LE: REDUCE sum = product.p
	LT: REDUCE sum = product.p
	EQUALS: REDUCE sum = product.p
	PLUS: REDUCE sum = product.p
	TIMES: SHIFT; goto 38
	DIV: SHIFT; goto 100
104:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	lexpr: SHIFT; goto 91
	primary: SHIFT; goto 102
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 105
105:	EOF: REDUCE rel = rel.r LT equiv.e
	RPAREN: REDUCE rel = rel.r LT equiv.e
	RBRACE: REDUCE rel = rel.r LT equiv.e
	COMMA: REDUCE rel = rel.r LT equiv.e
	SEMI: REDUCE rel = rel.r LT equiv.e
	CASE: REDUCE rel = rel.r LT equiv.e
	ELSE: REDUCE rel = rel.r LT equiv.e
	LE: REDUCE rel = rel.r LT equiv.e
	LT: REDUCE rel = rel.r LT equiv.e
	EQUALS: SHIFT; goto 34
106:	RPAREN: REDUCE exp_list = expr.e
	COMMA: REDUCE exp_list = expr.e
107:	RPAREN: REDUCE exp_list = empty
	COMMA: REDUCE exp_list = empty
108:	EOF: REDUCE empty = 
	CLASS: SHIFT; goto 111
	empty: SHIFT; goto 110
	classdecl: SHIFT; goto 108
	class_list: SHIFT; goto 109
109:	EOF: REDUCE class_list = classdecl.cd class_list.cl
110:	EOF: REDUCE class_list = empty
111:	TYPE: SHIFT; goto 112
112:	LBRACE: REDUCE empty = 
	LPAREN: SHIFT; goto 164
	EXTENDS: REDUCE empty = 
	empty: SHIFT; goto 176
	varformals: SHIFT; goto 113
113:	LBRACE: REDUCE empty = 
	EXTENDS: SHIFT; goto 158
	empty: SHIFT; goto 163
	have_extends: SHIFT; goto 114
114:	LBRACE: SHIFT; goto 116
	classbody: SHIFT; goto 115
115:	EOF: REDUCE classdecl = CLASS TYPE.t varformals.v have_extends.e classbody.fl
	CLASS: REDUCE classdecl = CLASS TYPE.t varformals.v have_extends.e classbody.fl
116:	RBRACE: REDUCE empty = 
	LBRACE: SHIFT; goto 153
	VAR: SHIFT; goto 143
	DEF: REDUCE empty = 
	OVERRIDE: SHIFT; goto 157
	empty: SHIFT; goto 121
	overridable: SHIFT; goto 122
	feature: SHIFT; goto 119
	feature_list: SHIFT; goto 117
117:	RBRACE: SHIFT; goto 118
118:	EOF: REDUCE classbody = LBRACE feature_list.fl RBRACE
	CLASS: REDUCE classbody = LBRACE feature_list.fl RBRACE
119:	RBRACE: REDUCE empty = 
	LBRACE: SHIFT; goto 153
	VAR: SHIFT; goto 143
	DEF: REDUCE empty = 
	OVERRIDE: SHIFT; goto 157
	empty: SHIFT; goto 121
	overridable: SHIFT; goto 122
	feature: SHIFT; goto 119
	feature_list: SHIFT; goto 120
120:	RBRACE: REDUCE feature_list = feature.f feature_list.fl
121:	RBRACE: REDUCE feature_list = empty
	DEF: REDUCE overridable = empty
122:	DEF: SHIFT; goto 123
123:	ID: SHIFT; goto 124
124:	LPAREN: SHIFT; goto 133
	formals: SHIFT; goto 125
125:	COLON: SHIFT; goto 126
126:	TYPE: SHIFT; goto 127
127:	ASSIGN: SHIFT; goto 128
128:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	NATIVE: SHIFT; goto 132
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 131
	expr_or_native: SHIFT; goto 129
129:	SEMI: SHIFT; goto 130
130:	RBRACE: REDUCE feature = overridable DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	LBRACE: REDUCE feature = overridable DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	VAR: REDUCE feature = overridable DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	DEF: REDUCE feature = overridable DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	OVERRIDE: REDUCE feature = overridable DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
131:	SEMI: REDUCE expr_or_native = expr.e
132:	SEMI: REDUCE expr_or_native = NATIVE
133:	RPAREN: REDUCE empty = 
	COMMA: REDUCE empty = 
	ID: SHIFT; goto 138
	empty: SHIFT; goto 142
	formal: SHIFT; goto 141
	formal_list: SHIFT; goto 134
134:	RPAREN: SHIFT; goto 135
	COMMA: SHIFT; goto 136
135:	COLON: REDUCE formals = LPAREN formal_list.fl RPAREN
136:	ID: SHIFT; goto 138
	formal: SHIFT; goto 137
137:	RPAREN: REDUCE formal_list = formal_list.fl COMMA formal.f
	COMMA: REDUCE formal_list = formal_list.fl COMMA formal.f
138:	COLON: SHIFT; goto 139
139:	TYPE: SHIFT; goto 140
140:	RPAREN: REDUCE formal = ID.id COLON TYPE.t
	COMMA: REDUCE formal = ID.id COLON TYPE.t
141:	RPAREN: REDUCE formal_list = formal.f
	COMMA: REDUCE formal_list = formal.f
142:	RPAREN: REDUCE formal_list = empty
	COMMA: REDUCE formal_list = empty
143:	ID: SHIFT; goto 144
144:	ASSIGN: SHIFT; goto 145
	COLON: SHIFT; goto 148
145:	NATIVE: SHIFT; goto 146
146:	SEMI: SHIFT; goto 147
147:	RBRACE: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
	LBRACE: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
	VAR: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
	DEF: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
	OVERRIDE: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
148:	TYPE: SHIFT; goto 149
149:	ASSIGN: SHIFT; goto 150
150:	MINUS: SHIFT; goto 89
	LBRACE: SHIFT; goto 43
	LPAREN: SHIFT; goto 81
	ID: SHIFT; goto 76
	NULL: SHIFT; goto 85
	NEW: SHIFT; goto 94
	THIS: SHIFT; goto 79
	SUPER: SHIFT; goto 16
	NOT: SHIFT; goto 92
	INTEGER: SHIFT; goto 86
	STRING: SHIFT; goto 87
	BOOLEAN: SHIFT; goto 88
	IF: SHIFT; goto 8
	WHILE: SHIFT; goto 26
	lexpr: SHIFT; goto 5
	primary: SHIFT; goto 57
	ident: SHIFT; goto 25
	product: SHIFT; goto 103
	sum: SHIFT; goto 97
	equiv: SHIFT; goto 80
	rexpr: SHIFT; goto 15
	rel: SHIFT; goto 31
	expr: SHIFT; goto 151
151:	SEMI: SHIFT; goto 152
152:	RBRACE: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
	LBRACE: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
	VAR: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
	DEF: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
	OVERRIDE: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
153:	MINUS: REDUCE empty = 
	LBRACE: REDUCE empty = 
	LPAREN: REDUCE empty = 
	ID: REDUCE empty = 
	NULL: REDUCE empty = 
	NEW: REDUCE empty = 
	THIS: REDUCE empty = 
	SUPER: REDUCE empty = 
	NOT: REDUCE empty = 
	INTEGER: REDUCE empty = 
	STRING: REDUCE empty = 
	BOOLEAN: REDUCE empty = 
	IF: REDUCE empty = 
	WHILE: REDUCE empty = 
	VAR: REDUCE empty = 
	empty: SHIFT; goto 71
	st_list: SHIFT; goto 46
	block: SHIFT; goto 154
154:	RBRACE: SHIFT; goto 155
155:	SEMI: SHIFT; goto 156
156:	RBRACE: REDUCE feature = LBRACE block.b RBRACE SEMI
	LBRACE: REDUCE feature = LBRACE block.b RBRACE SEMI
	VAR: REDUCE feature = LBRACE block.b RBRACE SEMI
	DEF: REDUCE feature = LBRACE block.b RBRACE SEMI
	OVERRIDE: REDUCE feature = LBRACE block.b RBRACE SEMI
157:	DEF: REDUCE overridable = OVERRIDE
158:	TYPE: SHIFT; goto 160
	NATIVE: SHIFT; goto 162
	type_or_native: SHIFT; goto 159
159:	LBRACE: REDUCE have_extends = EXTENDS type_or_native.ext
160:	LPAREN: SHIFT; goto 20
	actuals: SHIFT; goto 161
161:	LBRACE: REDUCE type_or_native = TYPE.t actuals.a
162:	LBRACE: REDUCE type_or_native = NATIVE
163:	LBRACE: REDUCE have_extends = empty
164:	RPAREN: SHIFT; goto 165
	COMMA: REDUCE empty = 
	VAR: SHIFT; goto 170
	empty: SHIFT; goto 175
	one_var: SHIFT; goto 174
	var_list: SHIFT; goto 166
165:	LBRACE: REDUCE varformals = LPAREN RPAREN
	EXTENDS: REDUCE varformals = LPAREN RPAREN
166:	RPAREN: SHIFT; goto 167
	COMMA: SHIFT; goto 168
167:	LBRACE: REDUCE varformals = LPAREN var_list.vl RPAREN
	EXTENDS: REDUCE varformals = LPAREN var_list.vl RPAREN
168:	VAR: SHIFT; goto 170
	one_var: SHIFT; goto 169
169:	RPAREN: REDUCE var_list = var_list.vl COMMA one_var.v
	COMMA: REDUCE var_list = var_list.vl COMMA one_var.v
170:	ID: SHIFT; goto 171
171:	COLON: SHIFT; goto 172
172:	TYPE: SHIFT; goto 173
173:	RPAREN: REDUCE one_var = VAR ID.id COLON TYPE.t
	COMMA: REDUCE one_var = VAR ID.id COLON TYPE.t
174:	RPAREN: REDUCE var_list = one_var.v
	COMMA: REDUCE var_list = one_var.v
175:	RPAREN: REDUCE var_list = empty
	COMMA: REDUCE var_list = empty
176:	LBRACE: REDUCE varformals = empty
	EXTENDS: REDUCE varformals = empty
177:	CLASS: SHIFT; goto 178
178:	EXTENDS: SHIFT; goto 179
179:	VAR: SHIFT; goto 180
180:	OVERRIDE: SHIFT; goto 181
181:	DEF: SHIFT; goto 182
182:	NATIVE: SHIFT; goto 183
183:	NEW: SHIFT; goto 184
184:	NULL: SHIFT; goto 185
185:	THIS: SHIFT; goto 186
186:	CASE: SHIFT; goto 187
187:	MATCH: SHIFT; goto 188
188:	IF: SHIFT; goto 189
189:	ELSE: SHIFT; goto 190
190:	WHILE: SHIFT; goto 191
191:	SUPER: SHIFT; goto 192
192:	LPAREN: SHIFT; goto 193
193:	RPAREN: SHIFT; goto 194
194:	LBRACE: SHIFT; goto 195
195:	RBRACE: SHIFT; goto 196
196:	COLON: SHIFT; goto 197
197:	COMMA: SHIFT; goto 198
198:	ASSIGN: SHIFT; goto 199
199:	SEMI: SHIFT; goto 200
200:	ARROW: SHIFT; goto 201
201:	DOT: SHIFT; goto 202
202:	PLUS: SHIFT; goto 203
203:	MINUS: SHIFT; goto 204
204:	TIMES: SHIFT; goto 205
205:	DIV: SHIFT; goto 206
206:	LE: SHIFT; goto 207
207:	LT: SHIFT; goto 208
208:	EQUALS: SHIFT; goto 209
209:	NOT: SHIFT; goto 210
210:	TYPE: SHIFT; goto 211
211:	ID: SHIFT; goto 212
212:	INTEGER: SHIFT; goto 213
213:	STRING: SHIFT; goto 214
214:	BOOLEAN: SHIFT; goto 215
215:	EOF: REDUCE bogus = STUB CLASS EXTENDS VAR OVERRIDE DEF NATIVE NEW NULL THIS CASE MATCH IF ELSE WHILE SUPER LPAREN RPAREN LBRACE RBRACE COLON COMMA ASSIGN SEMI ARROW DOT PLUS MINUS TIMES DIV LE LT EQUALS NOT TYPE ID INTEGER STRING BOOLEAN
